import{e as s}from"./app.3a4a8f90.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const n={},e=s(`<h1 id="utility-functions" tabindex="-1"><a class="header-anchor" href="#utility-functions" aria-hidden="true">#</a> Utility functions</h1><p>Beside SDK, <code>@heseya/store-core</code> package includes a set of utility functions to help you create a store using Heseya API. They can simply be imported from the <code>@heseya/store-core</code> package.</p><h2 id="format-api-errors" tabindex="-1"><a class="header-anchor" href="#format-api-errors" aria-hidden="true">#</a> Format Api errors</h2><p>Returns an error message from any given error with more detailed information when <code>AxiosError</code> is passed into it</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">formatApiError</span><span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> HeseyaErrorCode<span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="permissions" tabindex="-1"><a class="header-anchor" href="#permissions" aria-hidden="true">#</a> Permissions</h2><p>Returns the function, tha checks if given permissions match the permission passed into the function</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">hasAccess</span><span class="token punctuation">(</span>required<span class="token operator">:</span> Permission <span class="token operator">|</span> Permission<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> anyOfRequired <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span>
  <span class="token punctuation">(</span>userPermissions<span class="token operator">:</span> Permission<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="restore-cart" tabindex="-1"><a class="header-anchor" href="#restore-cart" aria-hidden="true">#</a> Restore cart</h2><p>Recreates <code>CartItem</code> classes from its simplified objects created by the <code>CartItem.toJSON</code> method</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">restoreCart</span><span class="token punctuation">(</span>savedCart<span class="token operator">:</span> SavedCartItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> CartItem<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="seo" tabindex="-1"><a class="header-anchor" href="#seo" aria-hidden="true">#</a> SEO</h2><p>Creates head metatags from the given Heseya SEO object</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">createSeoMetatags</span><span class="token punctuation">(</span><span class="token operator">...</span>seoMetadatas<span class="token operator">:</span> SeoMetadata<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="schemas" tabindex="-1"><a class="header-anchor" href="#schemas" aria-hidden="true">#</a> Schemas</h2><p>Changes raw <code>Schema</code> objects into the <code>CartItemSchema</code> objects, which holds the values of the schema. It uses schema default values.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">parseSchemasToValues</span><span class="token punctuation">(</span>schemas<span class="token operator">:</span> Schema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> CartItemSchema<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Calculates the price of the given <code>CartItemSchema</code> objects</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">calcSchemasPrice</span><span class="token punctuation">(</span>schemas<span class="token operator">:</span> CartItemSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,19);function t(p,o){return e}var i=a(n,[["render",t]]);export{i as default};
